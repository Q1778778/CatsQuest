### Starting build.
# Target: color_convert.ml.depends, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(yojson), extension:ml, file:color_convert.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package Graphics -modules color_convert.ml > color_convert.ml.depends # cached
# Target: color_convert.cmo, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:color_convert.cmo, file:color_convert.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package Graphics -o color_convert.cmo color_convert.ml # cached
# Target: color_convert.byte, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(yojson), byte, dont_link_with, extension:byte, file:color_convert.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -package oUnit -package yojson -package ANSITerminal -package Graphics color_convert.cmo -o color_convert.byte # cached
# Target: gui.ml.depends, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(yojson), extension:ml, file:gui.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package Graphics -modules gui.ml > gui.ml.depends
# Target: gui.cmo, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:gui.cmo, file:gui.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package Graphics -o gui.cmo gui.ml
# Target: gui.byte, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(yojson), byte, dont_link_with, extension:byte, file:gui.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -package oUnit -package yojson -package ANSITerminal -package Graphics color_convert.cmo gui.cmo -o gui.byte
# Target: enemy.ml.depends, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(yojson), extension:ml, file:enemy.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package Graphics -modules enemy.ml > enemy.ml.depends
# Target: enemy.cmo, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:enemy.cmo, file:enemy.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package Graphics -o enemy.cmo enemy.ml
# Target: enemy.byte, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(yojson), byte, dont_link_with, extension:byte, file:enemy.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -package oUnit -package yojson -package ANSITerminal -package Graphics enemy.cmo -o enemy.byte
# Compilation successful.
